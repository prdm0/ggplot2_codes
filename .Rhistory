test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit='cm'),
legend.background = element_rect(fill = "gray95", color = "black"))
p7 <- p6 + theme_line
p7
library(ggplot2)
library(showtext)
showtext_auto()
font_add_google("Gloria Hallelujah", "gloria")
empirical <- function(x, ...){
domain <- seq(from = floor(min(x)), to = ceiling(max(x)) + 1L, length.out = 1e3L)
test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit = 'cm'),
legend.background = element_rect(fill = "gray95", color = "black"),
legend.text = element_text(ffamily = "gloria"))
p7 <- p6 + theme_line
library(ggplot2)
library(showtext)
showtext_auto()
font_add_google("Gloria Hallelujah", "gloria")
empirical <- function(x, ...){
domain <- seq(from = floor(min(x)), to = ceiling(max(x)) + 1L, length.out = 1e3L)
test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit = 'cm'),
legend.background = element_rect(fill = "gray95", color = "black"),
legend.text = element_text(family = "gloria"))
p7 <- p6 + theme_line
p7
library(ggplot2)
library(showtext)
showtext_auto()
font_add_google("Gloria Hallelujah", "gloria")
empirical <- function(x, ...){
domain <- seq(from = floor(min(x)), to = ceiling(max(x)) + 1L, length.out = 1e3L)
test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit = 'cm'),
legend.background = element_rect(fill = "gray95", color = "black"),
legend.text = element_text(family = "gloria"),
legend.title = element_text(family = "gloria"))
p7 <- p6 + theme_line
library(ggplot2)
library(showtext)
showtext_auto()
font_add_google("Gloria Hallelujah", "gloria")
empirical <- function(x, ...){
domain <- seq(from = floor(min(x)), to = ceiling(max(x)) + 1L, length.out = 1e3L)
test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit = 'cm'),
legend.background = element_rect(fill = "gray95", color = "black"),
legend.text = element_text(family = "gloria"))
p7 <- p6 + theme_line
p7
library(cowplot)
library(ggplot2)
library(showtext)
library(cowplot)
showtext_auto()
font_add_google("Gloria Hallelujah", "gloria")
empirical <- function(x, ...){
domain <- seq(from = floor(min(x)), to = ceiling(max(x)) + 1L, length.out = 1e3L)
test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit = 'cm'),
legend.background = element_rect(fill = "gray95", color = "black"),
legend.text = element_text(family = "gloria"))
p7 <- p6 + theme_line
plot_grid(p1, p5, p6, p7, labels = c("A", "B", "C", "D"))
library(ggplot2)
library(showtext)
library(cowplot)
showtext_auto()
font_add_google("Gloria Hallelujah", "gloria")
empirical <- function(x, ...){
domain <- seq(from = floor(min(x)), to = ceiling(max(x)) + 1L, length.out = 1e3L)
test <- function(i) sum(x <= domain[i]) / length(x)
result <- purrr::map_dbl(.x = 1L:length(domain), .f = test)
list(x = domain, y = result)
}
set.seed(0L)
dados <- rweibull(20L, shape = 2, scale = 1.5)
result <- empirical(dados)
x <- result$x
y <- result$y
p1 <- ggplot(data = data.frame(x = x, y = y), aes(x = x, y = y))
p2 <- p1  + ggtitle(label = "Função de Distribuição Empírica", subtitle = "Gráfico 04")
p3 <- p2 + scale_x_continuous(breaks = seq(0, 4, by = 0.3)) + scale_y_continuous(breaks = seq(0, 1, by = 0.05))
p4 <- p3 + geom_hline(yintercept = 1, lty = 2, lwd = 1.1, color = "gray40", alpha = 0.6)
p5 <- p4 + stat_function(args = list(shape = 2, scale = 1.5), fun = pweibull, lwd = 1.1, show.legend = TRUE,
aes(color = "Teórica")) +
geom_line(lwd = 1.1, aes(colour = "Empírica")) +
xlab(label = "x") + ylab(label = "Probabilidade")
p6 <- p5 + scale_colour_manual(breaks = c("Teórica", "Empírica"),
values = c("black", "blue"), name = "Curvas")
theme_line <- theme(plot.title = element_text(face = "bold", family = "gloria"),
plot.subtitle = element_text(family = "gloria"),
axis.title = element_text(face = "bold", family = "gloria"),
legend.title = element_text(face = "bold"),
legend.spacing.y = unit(2, "mm"),
legend.spacing.x = unit(5, "mm"),
legend.margin = margin(r = 0.6, l = 0.2, b = 0.2, unit = 'cm'),
legend.background = element_rect(fill = "gray95", color = "black"),
legend.text = element_text(family = "gloria"))
p7 <- p6 + theme_line
plot_grid(p1, p5, p6, p7, labels = c("A", "B", "C", "D"))
ggsave(filename = "empirical.pdf", width = 10, height = 10)
x <- c(1,2,3,2)
subset(x, x < 3)
x
1.7 + 2.5 + 1.3
1.5 + 0.5 + 1.2 + 2.5
2.5 +0.7 + 0.3
# ggplot(mpg, aes(hwy)) + geom_histogram(fill = "gray", alpha = 2/3) + theme_classic() +
#   geom_text(aes(25, 0.2, label = "Teste"), angle = 45, family = "Times New Roman", color = "blue") +
#   geom_hline(yintercept = 30) + geom_vline(xintercept = 30)  +
#   ggtitle("Título do gráfico construído usando o ggplot2", subtitle = "Um pequeno teste") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   geom_segment(aes(x = 10, y = 0, xend = 30, yend = 30)) + geom_segment(aes(x = 10, y = 0, xend = 30, yend = 0)) +
#   geom_point(aes(30, 30), color = "blue", size = 5, pch = 19)
library(ggplot2)
x <- seq(-15, 15, length.out = 200L)
dados <- data.frame(x = x, tipo = factor(rep(c("A", "B"), each = 200)), y = c(dnorm(x, 0, 1), dnorm(x, 2, 2)))
p1 <- ggplot(mapping = aes(x = c(-15, 15), y = c(0, 0.3))) +
stat_function(fun = dnorm, n = 1000L, args = list(mean = 0, sd = 2),  aes(color = "Gráfico 1")) +
stat_function(fun = dnorm, n = 1000L, args = list(mean = 2, sd = 2),  aes(color = "Gráfico 2")) +
scale_color_manual(values = c("blue", "red"), name = "Curva Normal: ")
p2 <- p1 + scale_x_continuous(name = "x", breaks = seq(-15, 15, 1)) +
scale_y_continuous(name = "y", breaks = seq(0, 1, by = 0.01))
p3 <- p2 + ggtitle(label = "Curvas Normais", subtitle = "Estudando o ggplot2")
arrow <- arrow(length = unit(0.2, "cm"), type = "open")
p4 <- p3 + theme(legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
legend.position = "bottom",
panel.background = element_rect(fill = "white"),
axis.line = element_line(colour = "red", size = 0.4, arrow = arrow),
axis.ticks.x = element_line(color = "blue", size = 0.6))
set.seed(0)
p5 <- p4 + geom_histogram(data.frame(x = rnorm(100, 0 , 2)), mapping = aes(x = x, y =..density..), alpha = 0.5,
colour = "white", size = 0.56, fill = "blue")
p6 <- p5 + geom_histogram(data.frame(x = rnorm(100, 2 , 2)), mapping = aes(x = x, y =..density..), alpha = 0.2,
colour = "white", size = 0.5, fill = "red")
p7 <- p6 + geom_segment(mapping = aes(x = -15, y = 0.10, xend = -10, yend = 0.10)) +
geom_segment(mapping = aes(x = -15, y = 0.10, xend = -15, yend = 0.16)) +
geom_segment(mapping = aes(x = -15, y = 0.16, xend = -10, yend = 0.16)) +
geom_segment(mapping = aes(x = -10, y = 0.10, xend = -10, yend = 0.16))
p8 <- p7 + geom_rect(aes(xmin = -15, xmax = -10, ymin = 0.10, ymax = 0.16), fill = "green")
p8
library(ggplot2)
library(showtext)
library(cowplot)
font_add_google("Kalam", "kalam")
showtext_auto()
set.seed(0L)
dados <- rweibull(200, shape = 2, scale = 1.5)
p1 <- ggplot(data.frame(x = dados), aes(x = x, y = seq(0, 1, length.out = length(dados)))) +
scale_x_continuous(breaks = seq(0, 4, by = 0.2))
p2 <- p1 + scale_y_continuous(breaks = seq(0, 1, by = 0.05)) + ylab(label = "Probabilidade")
p3 <- p2 + ggtitle(label = "Código 3", subtitle = "Estudando ggplot2")
p4 <- p3 + geom_histogram(data = data.frame(x = dados), aes(x = x, y = ..density..), bins = 15, fill = "#808080",
col = "black")
p5 <- p4 +  theme(plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(family = "kalam", face = "bold"),
axis.title.y = element_text(family = "kalam", face = "bold"),
plot.title = element_text(family = "kalam", face = "bold", size = 20),
plot.subtitle = element_text(family = "kalam"),
axis.text = element_text(face = "bold"))
p6 <- p5 + background_grid()
p7 <- p6 + stat_function(fun = dweibull, args = list(shape = 2, scale = 1.5), color = "red",
mapping = aes(x = seq(0, 3.2, length.out = 200L),
y = seq(0, 1, length.out = 200L)),
lwd = 1.3)
plot_grid(p4, p5, p6, p7, labels = LETTERS[1:4])
ggsave(filename = "histogramas.pdf", width = 10, height = 10)
dweibull(x = 0.01, 1, 1)
dweibull(x = 0.01, 0.01, 1)
dweibull(x = 0.01, 0.1, 1)
library(ggplot2)
ggplot(mapping = aes(c(-10, 10), y = c(0, 4)))
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 4))) + ggtitle(label = "Normal Distribution") +
xlab("") + ylab("Probability Density")
p1
df <- data.frame(
x = runif(100),
y = runif(100),
z1 = rnorm(100),
z2 = abs(rnorm(100))
)
ggplot(df, aes(x, y)) +
geom_point(aes(colour = z1)) +
scale_colour_gradient2()
waiver()
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 4))) + ggtitle(label = "Normal Distribution") +
xlab("") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p1
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p1
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p1
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p2 <- p1 + StatFunction
StatFunction
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p2 <- p1 + stat_function(fn = dnorm, args = list(mean = 0, sd = 1))
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-10, 10), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_y_continuous(breaks = seq(-3.5, 3.5, by = 0.05))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.05))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "ribbon")
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "ribbon",
mapping = aes(ymim = 0, ymax = ..y..))
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "ribbon",
mapping = aes(ymin = 0, ymax = ..y..))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "area",
mapping = aes(ymin = 0, ymax = ..y..))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "area")
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "ribbon",
mapping = aes(ymin=0, ymax=..y..))
p2
library(ggplot2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "ribbon",
mapping = aes(ymin=0, ymax=..y.., xmin = 0.5, xmax = 2))
p2
library(ggplot2)
limitRange <- function(fun, min, max) {
function(x) {
y <- fun(x)
y[x < min  |  x > max] <- NA
return(y)
}
}
# This returns a function
dlimit <- limitRange(dnorm, 0, 2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
p2
library(ggplot2)
limitRange <- function(fun, min, max) {
function(x) {
y <- fun(x)
y[x < min  |  x > max] <- NA
return(y)
}
}
# This returns a function
dlimit <- limitRange(dnorm, 0, 2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +
stat_function(fun = dlimit, args = list(mean = 0, sd = 1), geom = "area")
p2
library(ggplot2)
limitRange <- function(fun, min, max) {
function(x) {
y <- fun(x)
y[x < min  |  x > max] <- NA
return(y)
}
}
# This returns a function
dlimit <- limitRange(dnorm, 0, 2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +
stat_function(fun = dlimit, geom = "area")
p2
library(ggplot2)
limitRange <- function(fun, min, max) {
function(x) {
y <- fun(x)
y[x < min  |  x > max] <- NA
return(y)
}
}
# This returns a function
dlimit <- limitRange(dnorm, 0, 2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +
stat_function(fun = dlimit, geom = "a", alpha = 0.7)
library(ggplot2)
limitRange <- function(fun, min, max) {
function(x) {
y <- fun(x)
y[x < min  |  x > max] <- NA
return(y)
}
}
# This returns a function
dlimit <- limitRange(dnorm, 0, 2)
p1 <- ggplot(mapping = aes(c(-3.5, 3.5), y = c(0, 0.4))) + ggtitle(label = "Normal Distribution") +
xlab("x") + ylab("Probability Density") + scale_y_continuous(breaks = seq(0, 0.4, by = 0.02)) +
scale_x_continuous(breaks = seq(-3.5, 3.5, by = 0.5))
p2 <- p1 + stat_function(fun = dnorm, args = list(mean = 0, sd = 1)) +
stat_function(fun = dlimit, geom = "area", alpha = 0.7)
p2
